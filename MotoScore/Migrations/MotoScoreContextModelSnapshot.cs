// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotoScore.Data;

#nullable disable

namespace MotoScore.Migrations
{
    [DbContext(typeof(MotoScoreContext))]
    partial class MotoScoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MotoScore.Models.Contender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CurrentPart")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PenaltyPointsCount")
                        .HasColumnType("int");

                    b.Property<int>("StartNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StartNumber"), 1L, 1);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TourmanentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TournamentGroup")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourmanentId");

                    b.ToTable("Contender");
                });

            modelBuilder.Entity("MotoScore.Models.Tourmanent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<int>("LevelsCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tourmanent");
                });

            modelBuilder.Entity("MotoScore.Models.Contender", b =>
                {
                    b.HasOne("MotoScore.Models.Tourmanent", null)
                        .WithMany("Contenders")
                        .HasForeignKey("TourmanentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MotoScore.Models.Tourmanent", b =>
                {
                    b.Navigation("Contenders");
                });
#pragma warning restore 612, 618
        }
    }
}
